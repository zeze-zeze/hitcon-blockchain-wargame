{
    "landing": {
        "title": "HITCON Blockchain Wargame",
        "subtitle": "Welcome to the hitcon wargame.",
        "lang": "Language",
        "buttons": [
            {
                "text": "Login via Token"
            },
            {
                "text": "Play Anonymously"
            }
        ],
        "dialogs": [
            {
                "title": "Please enter your token",
                "content": "In order to win an NFT after you've solved all the challenges, you must provide your admission JWT token",
                "buttons": {
                    "cancel": "Cancel",
                    "submit": "Submit"
                }
            },
            {
                "title": "Login Anonymously",
                "content": "If you login anonymously, You cannot win an NFT after you've solved all the challenges.",
                "buttons": {
                    "cancel": "Cancel",
                    "submit": "OK, I understand"
                }
            }
        ]
    },
    "dashboard": {
        "sidebar": {
            "iconTitle": "HITCON Wargame",
            "subheader": "Dashboard",
            "entries": {
                "home": "Home",
                "tutorial": "Tutorial",
                "faucet": "Faucet",
                "challenges": "Challenges",
                "logout": "Logout"
            }
        },
        "header": {
            "tooltip": {
                "toggleMenu": "Toggle Menu",
                "notification": "Notification",
                "achievement": "Achievement"
            },
            "notification": {
                "title": "Notification",
                "empty": "Empty",
                "messages": [
                    {
                        "title": "Horray! You solve Challenge 0.",
                        "content": "You won NFT0."
                    },
                    {
                        "title": "Horray! You solve Challenge 1.",
                        "content": "You won NFT1."
                    },
                    {
                        "title": "Horray! You solve Challenge 2.",
                        "content": "You won NFT2."
                    },
                    {
                        "title": "Horray! You solve Challenge 3.",
                        "content": "You won NFT3."
                    },
                    {
                        "title": "Horray! You solve Challenge 4.",
                        "content": "You won NFT4."
                    },
                    {
                        "title": "Horray! You solve Challenge 5.",
                        "content": "You won NFT5."
                    },
                    {
                        "title": "Horray! You solve all challenges.",
                        "content": "You won the final NFT."
                    }
                ]
            },
            "userMenu": {
                "connectWallet": "Connect Wallet",
                "disconnectWallet": "Disconnect Wallet",
                "logout": "Logout"
            },
            "achievement": {
                "requestNFT": "Request NFT",
                "viewNFT": "View NFT",
                "dialogs": [
                    {
                        "title": "Please enter your token",
                        "content": "You must provide your admission JWT token to win the mainnet NFT.",
                        "buttons": {
                            "cancel": "Cancel",
                            "submit": "Submit"
                        }
                    },
                    {
                        "title": "Congratulations! You have solved all the challenges.",
                        "content": "Your mainnet NFT gift has been successfully sent. Click on the link below to view your NFT.",
                        "transaction": "View your transaction on etherscan",
                        "buttons": {
                            "ok": "OK"
                        }
                    }
                ]
            }
        }
    },
    "home": {
        "title": "HITCON Blockchain Wargame",
        "subtitle": "Hitcon Blockchain Wargame is a Blockchain CTF Game. Each challenge contains a smart contract that needs to be solved to satisfy win condition.",
        "cards": [
            {
                "title": "New to blockchain?",
                "buttonText": "Start Tutorial"
            },
            {
                "title": "Already familiar with blockchain?",
                "buttonText": "Start Playing"
            }
        ]
    },
    "tutorial": {
        "title": "Tutorial",
        "subtitle": "This tutorial walks you through the very basics of some Ethereum concepts, including Metamask, Solidity, and more!",
        "content": [
            {
                "type": "header",
                "data": "1. Set up MetaMask"
            },
            {
                "type": "body",
                "children": [
                    [
                        {
                            "type": "text",
                            "data": "If you don't have it already, install the "
                        },
                        {
                            "type": "link",
                            "data": "MetaMask browser extension",
                            "to": "https://metamask.io/"
                        },
                        {
                            "type": "text",
                            "data": " (in Chrome, Firefox, Brave or Opera on your desktop machine). Set up the extension's wallet and use the network selector to point to the 'Rinkeby test network' in the top left of the extension's interface."
                        }
                    ]
                ]
            },
            {
                "type": "header",
                "data": "2. Connect wallet"
            },
            {
                "type": "body",
                "children": [
                    [
                        {
                            "type": "text",
                            "data": "After MetaMask setup, you should have a wallet address. Now connect the wallet address by clicking the button in the right top of this platform, then any transaction made here will be related to the connected wallet address."
                        }
                    ]
                ]
            },
            {
                "type": "header",
                "data": "3. Use faucet to get ETH"
            },
            {
                "type": "body",
                "children": [
                    [
                        {
                            "type": "text",
                            "data": "We need ETH to make transactions in the wargame. Not the ETH on the mainnet, we use Rinkeby testnet instead, which is for testing purpose. Don't worry if you use too much because it doesn't cost you any money."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "Open our "
                        },
                        {
                            "type": "link",
                            "data": "hitcon faucet",
                            "to": "/faucet"
                        },
                        {
                            "type": "text",
                            "data": ", then click the button to request ETH from our faucet. If the faucet dry up, you can use other faucets on the internet below the button."
                        }
                    ]
                ]
            },
            {
                "type": "header",
                "data": "4. Open the browser's console"
            },
            {
                "type": "body",
                "children": [
                    [
                        {
                            "type": "text",
                            "data": "First, open our "
                        },
                        {
                            "type": "link",
                            "data": "challenge 0",
                            "to": "/challenges/0"
                        },
                        {
                            "type": "text",
                            "data": ". Then open your browser's console: "
                        },
                        {
                            "type": "code",
                            "data": "Tools > Developer Tools"
                        },
                        {
                            "type": "text",
                            "data": " ."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "You should see a few messages from the game. One of them should state your player's address. This will be important during the game! You can always see your player address by entering the following command:"
                        }
                    ],
                    [
                        {
                            "type": "code",
                            "data": "player"
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "Keep an eye out for warnings and errors, since they could provide important information during gameplay."
                        }
                    ]
                ]
            },
            {
                "type": "header",
                "data": "5. Use the console helpers"
            },
            {
                "type": "body",
                "children": [
                    [
                        {
                            "type": "code",
                            "data": "help()"
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "These will be super handy during gameplay."
                        }
                    ]
                ]
            },
            {
                "type": "header",
                "data": "6. The contract"
            },
            {
                "type": "body",
                "children": [
                    [
                        {
                            "type": "text",
                            "data": "Enter the following command in the console:"
                        }
                    ],
                    [
                        {
                            "type": "code",
                            "data": "contract"
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "This is the game's main smart contract. You don't need to interact with it directly through the console (as this app will do that for you) but you can if you want to. Playing around with this object now is a great way to learn how to interact with the other smart contracts of the game."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "Go ahead and expand the object to see what's inside."
                        }
                    ]
                ]
            },
            {
                "type": "header",
                "data": "7. Get NFT"
            },
            {
                "type": "body",
                "children": [
                    [
                        {
                            "type": "text",
                            "data": "Once you solve each challenge, you will get an NFT as award. To see the NFT, besides checking the icons on the top of this platform, you can also find them out at "
                        },
                        {
                            "type": "link",
                            "data": "testnets.opensea.io profile",
                            "to": "https://testnets.opensea.io/account"
                        },
                        {
                            "type": "text",
                            "data": ". The NFTs for testnet are displayed there."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "After solving all challenges, you will get an NFT on mainnet, which stands for a symbol of winning the wargame. You can see the NFT at "
                        },
                        {
                            "type": "link",
                            "data": "opensea.io profile",
                            "to": "https://opensea.io/account"
                        },
                        {
                            "type": "text",
                            "data": "."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "Note that the NFT is hidden by default and you may need to wait some time for mainnet to get the NFT. You can also see the owner of "
                        },
                        {
                            "type": "link",
                            "data": "HITCON NFT",
                            "to": "https://opensea.io/assets/ethereum/0xc426b0d03c01e847abaaebd72382d2ec1dfac7a1/1"
                        },
                        {
                            "type": "text",
                            "data": " and check whether your address is included. If there is any question, please contact the service counter or email to events@hitcon.org."
                        }
                    ]
                ]
            }
        ]
    },
    "faucet": {
        "title": "Faucet",
        "subtitle": "Get some Rinkeby ETH (One request only per address)",
        "content": {
            "address": "Wallet Address",
            "amount": "Request Amount",
            "buttonText": "Request ETH",
            "needMore": "Need more Rinkeby ETH?",
            "walletNotConnected": "Wallet not connected"
        }
    },
    "challenges": {
        "title": "Challenges",
        "subtitle": "Here's the list of all challenges. Have fun!",
        "list": [
            {
                "title": "Solidity 101",
                "description": "Learn to call function with parameters by using web3.",
                "tutorial": [
                    [
                        {
                            "type": "text",
                            "data": "I am glad to see you start the challenge."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "We are going through the first challenge."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "First of all, look at the modifier"
                        },
                        {
                            "type": "code",
                            "data": "winCondition"
                        },
                        {
                            "type": "text",
                            "data": " , which is our target to win the challenge."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "To meet the conditions, we have to satisfy the "
                        },
                        {
                            "type": "code",
                            "data": "require"
                        },
                        {
                            "type": "text",
                            "data": " statement."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "hint: "
                        },
                        {
                            "type": "code",
                            "data": "await contract.methods.<FUNCTION YOU WANT TO CALL>(<PARAMETERS>).send({from:player})"
                        },
                        {
                            "type": "text",
                            "data": " ."
                        }
                    ]
                ]
            },
            {
                "title": "I love hitcon",
                "description": "Learn to encode and hash by using web3.",
                "tutorial": [
                    [
                        {
                            "type": "text",
                            "data": "To encode a string, we can use "
                        },
                        {
                            "type": "code",
                            "data": "web3.utils.encodePacked"
                        },
                        {
                            "type": "text",
                            "data": ". To generate a hash, we can use "
                        },
                        {
                            "type": "code",
                            "data": "web3.utils.keccak256"
                        },
                        {
                            "type": "text",
                            "data": " ."
                        }
                    ]
                ]
            },
            {
                "title": "Points",
                "description": "Learn int and unsigned int.",
                "tutorial": [
                    [
                        {
                            "type": "text",
                            "data": "We have to get 10000000000 points, but we can only get at most 10 points in each transaction. What if we try to get negative integer points?"
                        }
                    ]
                ]
            },
            {
                "title": "Authentication",
                "description": "Learn to read slot on blockchain.",
                "tutorial": [
                    [
                        {
                            "type": "text",
                            "data": "Store "
                        },
                        {
                            "type": "code",
                            "data": "private"
                        },
                        {
                            "type": "text",
                            "data": " variable is not really private on blockchain."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "We can read slot to get the private variable."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "For instance, we can use "
                        },
                        {
                            "type": "code",
                            "data": "web3.eth.getStorageAt(instance, 0)"
                        },
                        {
                            "type": "text",
                            "data": "to read the first slot."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "Also note that we can use "
                        },
                        {
                            "type": "code",
                            "data": "web3.utils.toAscii"
                        },
                        {
                            "type": "text",
                            "data": " to convert "
                        },
                        {
                            "type": "code",
                            "data": "byte32"
                        },
                        {
                            "type": "text",
                            "data": " to "
                        },
                        {
                            "type": "code",
                            "data": "string"
                        },
                        {
                            "type": "text",
                            "data": " or "
                        },
                        {
                            "type": "code",
                            "data": "web3.utils.fromAscii"
                        },
                        {
                            "type": "text",
                            "data": " to convert "
                        },
                        {
                            "type": "code",
                            "data": "string"
                        },
                        {
                            "type": "text",
                            "data": " to "
                        },
                        {
                            "type": "code",
                            "data": "byte32"
                        },
                        {
                            "type": "text",
                            "data": " ."
                        }
                    ]
                ]
            },
            {
                "title": "Math Homework",
                "description": "Learn to interact a contract with an another contract.",
                "tutorial": [
                    [
                        {
                            "type": "text",
                            "data": "We can use online editor Remix to implement the functions "
                        },
                        {
                            "type": "code",
                            "data": "plus"
                        },
                        {
                            "type": "text",
                            "data": " and "
                        },
                        {
                            "type": "code",
                            "data": "minus"
                        },
                        {
                            "type": "text",
                            "data": " in an another contract."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "Then call the "
                        },
                        {
                            "type": "code",
                            "data": "submit"
                        },
                        {
                            "type": "text",
                            "data": " function by implementing an interface for "
                        },
                        {
                            "type": "code",
                            "data": "vuln4"
                        },
                        {
                            "type": "text",
                            "data": " ."
                        }
                    ],
                    [
                        {
                            "type": "link",
                            "data": "hint for Chal4",
                            "to": "https://gist.github.com/zeze-zeze/d99a7b80fa5b7e3c35f97919e7dec5f2"
                        }
                    ]
                ]
            },
            {
                "title": "Final Gates",
                "description": "Learn the difference between msg.sender and tx.origin, to get gasleft to meet the condition, and to calculate xor.",
                "tutorial": [
                    [
                        {
                            "type": "code",
                            "data": "msg.sender"
                        },
                        {
                            "type": "text",
                            "data": " is the caller, which means it can also be a contract instead of wallet address."
                        }
                    ],
                    [
                        {
                            "type": "code",
                            "data": "tx.origin"
                        },
                        {
                            "type": "text",
                            "data": " is just the original wallet address to call function."
                        }
                    ],
                    [
                        {
                            "type": "text",
                            "data": "About gas fee, we can observe the gas fee by inspecting remix or just try 22 times to bruteforce."
                        }
                    ],
                    [
                        {
                            "type": "link",
                            "data": "hint for Chal5",
                            "to": "https://gist.github.com/AlbertLin0327/96411634362bf1d5f5aa64897d9a808a"
                        }
                    ]
                ]
            }
        ],
        "challenge": "Challenge",
        "solved": "Solved",
        "notSolved": "Not Solved",
        "buttonText": "Start Challenge",
        "contract": {
            "submitText": "Submit",
            "submitButtonText": "I've finished the challenge!",
            "backToChallengeList": "Back to challenge list"
        }
    },
    "success": {
        "login": "Login successfully. Redirecting...",
        "requestETH": "Request ETH success.",
        "requestNFT": "Request NFT success",
        "challengeSolved": "Congratulations! You solved the challenge"
    },
    "error": {
        "serverError": "Server Error: Please contact the administrator.",
        "unexpectedError": "Unexpected Error: Please contact the developer.",
        "missingToken": "Error: Please provide your token.",
        "invalidToken": "Error: Invalid token.",
        "loginPermissionDenied": "Error: Your do not have permission to play the wargame.",
        "invalidLoginType": "Error: Invalid login type.",
        "userUnauthorized": "Error: You are not authorized to perform such an action. Please login first.",
        "sessionExpired": "Session Expired. Redirecting to login page...",
        "walletNotLogin": "Error: Please connect your wallet first.",
        "incorrectAddress": "Error: Incorrect wallet address.",
        "alreadyRequested": "Error: You already requested Ether.",
        "connectFirst": "Error: Please connect your wallet first.",
        "alreadySolved": "Error: You have alread solved the challenge.",
        "notSolved": "Error: Unfortunately, you did not solved the challenge.",
        "notAllSolved": "Error: Unfortunately, you did not solve all the challenges.",
        "NFTDenied": "Error: Sorry, you do not have the permission to get the NFT.",
        "NFTRequestOnce": "Error: NFT can only be requested once.",
        "faucetFailed": "Error: Faucet is not working. Please contact the administrator.",
        "NFTFailed": "Error: NFT cannot be transferred. Please contact the administrator.",
        "transactionFailed": "Error: Transaction Failed.",
        "noProvider": "Provider Error: No web3 provider was found.",
        "alreadyProcessing": "Metamask is already processing. Please click on the Metamask extension",
        "authorizeError": "Authorization Error: Please authorize to access your account."
    }
}
