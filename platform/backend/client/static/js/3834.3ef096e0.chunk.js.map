{"version":3,"file":"static/js/3834.3ef096e0.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","components/Main/ChallengeList/Challenge.tsx","components/Main/ChallengeList/index.tsx","../node_modules/@mui/icons-material/EmojiFlagsTwoTone.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { FC, useContext } from 'react';\nimport { Box, Card, Button, CardContent, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useTheme, styled } from '@mui/material/styles';\nimport EmojiFlagsTwoToneIcon from '@mui/icons-material/EmojiFlagsTwoTone';\nimport LanguageContext from 'contexts/LanguageContext';\n\ntype ChallengeProps = {\n    index: number,\n    title: string,\n    solved: boolean,\n}\n\nconst StatusBadge = styled(Box)(\n    ({ theme }) => ({\n        padding: theme.spacing(0.75, 1.5),\n        borderRadius: theme.general.borderRadiusSm,\n        textAlign: 'center',\n        display: 'inline-block',\n        lineHeight: 1,\n        fontWeight: 'bold',\n        fontSize: theme.typography.pxToRem(8),\n        color: theme.colors.alpha.white[100],\n    })\n);\n\nconst ChallengeCard = styled(Card)(\n    ({ theme }) => ({\n        height: '240px',\n        minWidth: '240px',\n        margin: theme.spacing(6),\n    })\n);\n\nconst ChallengeWrapper = styled(CardContent)(\n    ({ theme }) => ({\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        alignItems: 'stretch',\n        padding: theme.spacing(2),\n    })\n);\n\nconst ChallengeTitle = styled(Typography)(\n    ({ theme }) => ({\n        margin: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    })\n);\n\nconst ChallengeContent = styled(Box)(\n    ({ theme }) => ({\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n    })\n);\n\nconst ChallengeDesc: FC<ChallengeProps> = ({ index, title, solved }) => {\n\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const { multiLang } = useContext(LanguageContext);\n\n    return (\n        <ChallengeCard>\n            <ChallengeWrapper>\n                <ChallengeTitle variant=\"h4\" noWrap>\n                    <Box sx={{ marginRight: theme.spacing(0.5) }}>\n                        <EmojiFlagsTwoToneIcon />\n                    </Box>\n                    { multiLang?.challenges.challenge } {index}\n                    <Box sx={{ marginLeft: theme.spacing(0.5) }}>\n                        <EmojiFlagsTwoToneIcon />\n                    </Box>\n                </ChallengeTitle>\n                <ChallengeContent>\n                    <Typography variant=\"h2\">\n                        {title}\n                    </Typography>\n                    <StatusBadge sx={{\n                        background: solved ? theme.palette.success.main : theme.palette.error.main,\n                    }}>\n                        {solved ? multiLang?.challenges.solved : multiLang?.challenges.notSolved }\n                    </StatusBadge>\n                    <Button\n                        variant=\"contained\"\n                        style={{ marginTop: theme.spacing(2) }}\n                        onClick={() => {\n                            navigate(`/challenges/${index}`);\n                        }}\n                    >\n                        { multiLang?.challenges.buttonText }\n                    </Button>\n                </ChallengeContent>\n            </ChallengeWrapper>\n        </ChallengeCard>\n    );\n};\n\nexport default ChallengeDesc;\n","import { FC, useContext, useRef } from 'react';\nimport { Grid } from '@mui/material';\nimport MainWrapper from 'components/Main';\n\nimport Challenge from './Challenge';\nimport LanguageContext from 'contexts/LanguageContext';\nimport Web3Context from 'contexts/Web3Context';\n\ntype ChallengeType = {\n    title: string;\n    description: string;\n    tutorial: string;\n};\n\nconst Challenges: FC = () => {\n    const { solved } = useContext(Web3Context);\n    const { multiLang } = useContext(LanguageContext);\n    const challengesRef = useRef<ChallengeType[]>(multiLang?.challenges.list);\n\n    return (\n        <MainWrapper title=\"Challenges\">\n            <Grid container justifyContent=\"center\">\n                {\n                    challengesRef.current &&\n                    challengesRef.current.map(({ title }, idx) => {\n                        return (\n                            <Challenge\n                                key={idx}\n                                index={idx}\n                                title={title}\n                                solved={solved[idx]}\n                            />\n                        );\n                    })\n                }\n            </Grid>\n        </MainWrapper>\n    );\n}\n\nexport default Challenges;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 9H7v6h6l1 2h4v-6h-5z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14 9-1-2H7V5.72c.6-.34 1-.98 1-1.72 0-1.1-.9-2-2-2s-2 .9-2 2c0 .74.4 1.38 1 1.72V21h2v-4h5l1 2h7V9h-6zm4 8h-4l-1-2H7V9h5l1 2h5v6z\"\n}, \"1\")], 'EmojiFlagsTwoTone');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","StatusBadge","Box","theme","spacing","borderRadius","general","borderRadiusSm","textAlign","display","lineHeight","fontWeight","fontSize","typography","pxToRem","color","colors","alpha","white","ChallengeCard","Card","height","minWidth","margin","ChallengeWrapper","CardContent","flexDirection","alignItems","ChallengeTitle","Typography","justifyContent","ChallengeContent","width","index","title","solved","useTheme","navigate","useNavigate","multiLang","useContext","LanguageContext","variant","noWrap","sx","marginRight","EmojiFlagsTwoTone","challenges","challenge","marginLeft","background","palette","success","main","error","notSolved","Button","style","marginTop","onClick","buttonText","Web3Context","challengesRef","useRef","list","Main","Grid","container","current","map","idx","Challenge","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined"],"sourceRoot":""}