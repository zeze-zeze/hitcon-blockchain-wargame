{"version":3,"file":"static/js/4232.90ee9441.chunk.js","mappings":"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","sources":["components/Landing/index.tsx","components/WaitEffect/index.tsx"],"sourcesContent":["import { ChangeEvent, FC, useCallback, useContext, useState } from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    FormControl,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport { HelmetProvider, Helmet } from 'react-helmet-async';\nimport { styled, useTheme } from '@mui/material/styles';\nimport LanguageContext from 'contexts/LanguageContext';\nimport WaitEffect from 'components/WaitEffect';\nimport WaitEffectContext from \"contexts/WaitEffectContext\";\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\n\nconst LandingWrapper = styled(Container)(\n    ({ theme }) => ({\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    })\n);\n\nconst LandingCard = styled(Card)(\n    ({ theme }) => ({\n        padding: theme.spacing(10),\n        borderRadius: '64px',\n    })\n);\n\nconst LandingHeaderTypography = styled(Typography)(\n    ({ theme }) => ({\n        fontSize: theme.typography.pxToRem(50),\n        textAlign: 'center',\n        paddingBottom: theme.spacing(5),\n    })\n);\n\nconst LandingSubLandingHeaderTypography = styled(Typography)(\n    ({ theme }) => ({\n        fontSize: theme.typography.pxToRem(17),\n        textAlign: 'center',\n        paddingBottom: theme.spacing(4),\n    })\n);\n\nconst LandingButtonsWrapper = styled(Box)(\n    ({ theme }) => ({\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        width: '100%',\n    })\n);\n\nconst Landing: FC = () => {\n\n    const [tokenDialogOpen, setTokenDialogOpen] = useState<boolean>(false);\n    const [anonymDialogOpen, setAnonymDialogOpen] = useState<boolean>(false);\n    const [token, setToken] = useState<string>(\"\");\n    const { lang, changeLang, multiLang } = useContext(LanguageContext);\n    const theme = useTheme();\n    const minWidthUp = useMediaQuery(\"(min-width:1100px)\");\n    const navigate = useNavigate();\n    const { setShowBackDrop, setShowSnackBar, setErrorMessage, setSuccessMessage } = useContext(WaitEffectContext);\n\n    const handleLogin = useCallback(async (anonym: boolean) => {\n        let apiURL: string;\n        switch (process.env.NODE_ENV) {\n            case \"development\":\n                apiURL = process.env.REACT_APP_BASE_API_URL_DEV ?? \"https://localhost:3001/api\";\n                break;\n            case \"test\":\n                apiURL = process.env.REACT_APP_BASE_API_URL_TEST ?? \"https://localhost:3001/api\";\n                break;\n            case \"production\":\n                apiURL = process.env.REACT_APP_BASE_API_URL_PROD ?? \"https://localhost:31337/api\";\n                break;\n            default:\n                apiURL = process.env.REACT_APP_BASE_API_URL_DEV ?? \"https://localhost:3001/api\";\n                break;\n        }\n        if (anonym) {\n            setAnonymDialogOpen(false);\n        } else {\n            setTokenDialogOpen(false);\n        }\n        setShowBackDrop(true);\n        try {\n            if (anonym) {\n                await axios\n                    .post(apiURL + \"/login\", {\n                        type: \"anonymous\",\n                    }, {\n                        withCredentials: true\n                    });\n            } else {\n                await axios\n                    .post(apiURL + \"/login\", {\n                        type: \"token\",\n                        token: token,\n                    }, {\n                        withCredentials: true\n                    });\n            }\n            setSuccessMessage(multiLang?.success.login);\n            setShowSnackBar(1);\n\n            /*\n             * The server might not create the session instantly. \n             * Besides, there's a slim chance that the server might crashes here.\n             * So ping the server periodically and check whether the session is established\n             */\n\n            let tryPing = 0;\n            const pingInterval = setInterval(() => {\n                tryPing++;\n                if (tryPing === 60) {\n                    /* If you reached here, the server is probably down */\n                    clearInterval(pingInterval);\n                    setErrorMessage(multiLang?.error.serverError);\n                    setTimeout(() => {\n                        setShowBackDrop(false);\n                        setShowSnackBar(2);\n                    }, 4000); // set timeout for users to read the message\n                }\n                try {\n                    (async () => {\n                        const result = await axios\n                            .post(apiURL + \"/ping\", null, {\n                                withCredentials: true\n                            });\n                        if (result.data.expired === false) {\n                            clearInterval(pingInterval);\n                            setShowBackDrop(false);\n                            setShowSnackBar(0);\n                            navigate(\"/home\");\n                        }\n                    })();\n                } catch (err) { } // ignore all unexpected errors\n            }, 1000);\n\n        } catch (err) {\n            if (err instanceof AxiosError) {\n                if (err.code === \"ERR_BAD_REQUEST\") {\n                    const response: AxiosResponse = err.response as AxiosResponse;\n                    if (!response.data.ok) {\n                        const errMessage = response.data.message\n                        if (errMessage === \"Invalid Token\") {\n                            setErrorMessage(multiLang?.error.invalidToken);\n                        } else if (errMessage === \"Permission denied\") {\n                            setErrorMessage(multiLang?.error.loginPermissionDenied);\n                        } else if (errMessage === \"Invalid login type\") {\n                            setErrorMessage(multiLang?.error.invalidLoginType);\n                        } else {\n                            setErrorMessage(multiLang?.error.serverError);\n                        }\n                    }\n                } else {\n                    setErrorMessage(multiLang?.error.serverError);\n                }\n\n            } else {\n                setErrorMessage(multiLang?.error.unexpectedError);\n            }\n            setShowSnackBar(2);\n            setShowBackDrop(false);\n        }\n    }, [token, multiLang]);\n\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>Hitcon Wargame</title>\n            </Helmet>\n            <WaitEffect />\n            { /* \"login with token\" dialog */}\n            <Dialog\n                open={tokenDialogOpen}\n                onClose={() => setTokenDialogOpen(false)}\n            >\n                <DialogTitle id=\"dialog-title\">\n                    {multiLang?.landing.dialogs[0].title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"dialog-content\">\n                        {multiLang?.landing.dialogs[0].content}\n                    </DialogContentText>\n                    <Box>\n                        <TextField\n                            required\n                            id=\"jwt\"\n                            placeholder=\"eyJhbGci...\"\n                            value={token}\n                            onChange={(event: ChangeEvent<HTMLInputElement>) => setToken(event.target.value)}\n                            fullWidth\n                            sx={{\n                                mt: theme.spacing(2)\n                            }}\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTokenDialogOpen(false)}>\n                        {multiLang?.landing.dialogs[0].buttons.cancel}\n                    </Button>\n                    <Button onClick={() => handleLogin(false)}>\n                        {multiLang?.landing.dialogs[0].buttons.submit}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            { /* \"login anonymously\" dialog */}\n            <Dialog\n                open={anonymDialogOpen}\n                onClose={() => setAnonymDialogOpen(false)}\n            >\n                <DialogTitle id=\"dialog-title\">\n                    {multiLang?.landing.dialogs[1].title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"dialog-content\">\n                        {multiLang?.landing.dialogs[1].content}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setAnonymDialogOpen(false)}>\n                        {multiLang?.landing.dialogs[1].buttons.cancel}\n                    </Button>\n                    <Button onClick={() => handleLogin(true)}>\n                        {multiLang?.landing.dialogs[1].buttons.submit}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <LandingWrapper sx={{ width: minWidthUp ? '50%' : '550px' }}>\n                <LandingCard>\n                    <Grid spacing={10} container>\n                        <Grid item mx=\"auto\">\n                            <LandingHeaderTypography variant=\"h1\">\n                                {multiLang?.landing.title}\n                            </LandingHeaderTypography>\n                            <LandingSubLandingHeaderTypography\n                                sx={{ lineHeight: 1.5, pb: 4 }}\n                                variant=\"h4\"\n                                color=\"text.secondary\"\n                                fontWeight=\"normal\"\n                            >\n                                {multiLang?.landing.subtitle}\n                            </LandingSubLandingHeaderTypography>\n                            <FormControl fullWidth>\n                                <InputLabel id=\"lang-label\">{multiLang?.landing.lang}</InputLabel>\n                                <Select\n                                    labelId=\"lang-label\"\n                                    id=\"lang-select\"\n                                    value={lang}\n                                    label=\"Lang\"\n                                    onChange={(event: SelectChangeEvent) => {\n                                        const appointedLang: string = event.target.value;\n                                        changeLang(appointedLang);\n                                    }}\n                                >\n                                    <MenuItem value=\"en-US\">English</MenuItem>\n                                    <MenuItem value=\"zh-TW\">繁體中文</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <LandingButtonsWrapper>\n                                <Button\n                                    variant=\"contained\"\n                                    size=\"large\"\n                                    onClick={() => {\n                                        setTokenDialogOpen(true);\n                                    }}\n                                    sx={{ margin: theme.spacing(3) }}\n                                >\n                                    {multiLang?.landing.buttons[0].text}\n                                </Button>\n                                <Button\n                                    color=\"error\"\n                                    variant=\"contained\"\n                                    size=\"large\"\n                                    onClick={() => {\n                                        setAnonymDialogOpen(true);\n                                    }}\n                                    sx={{ margin: theme.spacing(3) }}\n                                >\n                                    {multiLang?.landing.buttons[1].text}\n                                </Button>\n                            </LandingButtonsWrapper>\n                        </Grid>\n                    </Grid>\n                </LandingCard>\n            </LandingWrapper>\n        </HelmetProvider>\n    );\n}\n\nexport default Landing;","import { FC, Dispatch, SetStateAction, useState, useContext } from \"react\";\nimport {\n    Backdrop,\n    CircularProgress,\n    Snackbar,\n    Alert,\n} from \"@mui/material\";\nimport WaitEffectContext from \"contexts/WaitEffectContext\";\n\nconst WaitEffect: FC = () => {\n    const { showSnackBar, showBackDrop, setShowSnackBar, successMessage, errorMessage } = useContext(WaitEffectContext);\n    return (\n        <>\n            <Backdrop\n                sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                open={showBackDrop}\n            >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <Snackbar\n                open={showSnackBar != 0}\n                autoHideDuration={6000}\n                onClose={() => {\n                    setShowSnackBar(0);\n                }}\n            >\n                <Alert\n                    onClose={() => {\n                        setShowSnackBar(0);\n                    }}\n                    severity={showSnackBar === 1 ? \"success\" : \"error\"}\n                    sx={{ width: \"100%\" }}\n                >\n                    {showSnackBar === 1 ? (successMessage ?? 'Success') : (errorMessage ?? 'Failed')}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n};\n\nexport default WaitEffect;"],"names":["LandingWrapper","styled","Container","theme","height","display","flexDirection","justifyContent","LandingCard","Card","padding","spacing","borderRadius","LandingHeaderTypography","Typography","fontSize","typography","pxToRem","textAlign","paddingBottom","LandingSubLandingHeaderTypography","LandingButtonsWrapper","Box","width","useState","tokenDialogOpen","setTokenDialogOpen","anonymDialogOpen","setAnonymDialogOpen","token","setToken","useContext","LanguageContext","lang","changeLang","multiLang","useTheme","minWidthUp","useMediaQuery","navigate","useNavigate","WaitEffectContext","setShowBackDrop","setShowSnackBar","setErrorMessage","setSuccessMessage","handleLogin","useCallback","anonym","process","apiURL","axios","type","withCredentials","success","login","tryPing","pingInterval","setInterval","clearInterval","error","serverError","setTimeout","data","expired","err","AxiosError","code","response","ok","errMessage","message","invalidToken","loginPermissionDenied","invalidLoginType","unexpectedError","open","onClose","id","landing","dialogs","title","content","required","placeholder","value","onChange","event","target","fullWidth","sx","mt","onClick","buttons","cancel","submit","container","item","mx","variant","lineHeight","pb","color","fontWeight","subtitle","labelId","label","appointedLang","size","margin","text","showSnackBar","showBackDrop","successMessage","errorMessage","zIndex","drawer","autoHideDuration","severity"],"sourceRoot":""}