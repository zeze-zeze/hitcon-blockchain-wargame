{"version":3,"file":"static/js/157.4456fc7c.chunk.js","mappings":"kMAmHA,UAtFqB,WACjB,IAAQA,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,UACR,GAA8BG,EAAAA,EAAAA,UAAiB,IAA/C,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WASED,EAAWE,0BAMtB,GAAE,KAEC,SAAC,KAAD,CAAaC,MAAM,WAAnB,UACI,UAAC,KAAD,CAAMC,WAAS,EAAf,WACI,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACI,UAAC,KAAD,YACI,SAAC,KAAD,iBACKX,QADL,IACKA,OADL,EACKA,EAAWY,SAASJ,SAEzB,SAAC,KAAD,iBACKR,QADL,IACKA,OADL,EACKA,EAAWY,SAASC,iBAIjC,SAAC,KAAD,CAAMH,MAAI,EAACC,GAAI,GAAf,UACI,SAAC,KAAD,WACI,SAAC,IAAD,iBAEQX,QAFR,IAEQA,OAFR,EAEQA,EAAWY,SAASE,QAAQC,KAAI,SAACC,GAC7B,MAAqB,WAAjBA,EAAQC,MAEJ,SAAC,KAAD,UACKD,EAAQE,MADaC,KAAKC,UAAUJ,IAIrB,SAAjBA,EAAQC,MAEX,SAAC,EAAAI,SAAD,UAEQL,EAAQM,SAASP,KAAI,SAACQ,GAClB,OACI,SAAC,KAAD,UAEQA,EAAUR,KAAI,SAACS,GACX,MAAuB,SAAnBA,EAAUP,KACHO,EAAUN,KACS,SAAnBM,EAAUP,MAEb,0BAAOO,EAAUN,OAEK,SAAnBM,EAAUP,MAEb,cAAGQ,KAAI,UAAED,EAAUE,UAAZ,aAAE,EAAcC,QACnB,qBACAvB,GAFJ,SAGIoB,EAAUN,YALf,EAAgC,IAAD,CAQzC,KAIhB,KAzBMC,KAAKC,UAAUJ,SAF/B,CAgCV,cAQhC,C","sources":["components/Main/Tutorial/index.tsx"],"sourcesContent":["import { FC, Fragment, useContext, useEffect, useState } from 'react';\nimport { Grid, Container } from '@mui/material';\nimport MainWrapper from 'components/Main';\nimport {\n    HeaderWrapper,\n    HeaderTypography,\n    SubtitleTypography,\n    SubHeaderTypography,\n    BodyTypography,\n    PaperComponentWrapper\n} from 'components/Main';\nimport LanguageContext from 'contexts/LanguageContext';\nimport { string } from 'prop-types';\n\ntype TutorialType = {\n    type: string;\n    data: string;\n    to?: string;\n};\n\ntype HeaderType = {\n    type: 'header';\n    data: string;\n};\ntype BodyType = {\n    type: 'body';\n    children: TutorialType[][];\n};\n\nconst Tutorial: FC = () => {\n    const { multiLang } = useContext(LanguageContext);\n    const [baseURL, setBaseURL] = useState<string>(\"\");\n    \n    useEffect(() => {\n        switch (process.env.NODE_ENV) {\n            case \"development\":\n                setBaseURL(process.env.REACT_APP_BASE_URL_DEV as string);\n                break;\n            case \"test\":\n                setBaseURL(process.env.REACT_APP_BASE_URL_TEST as string);\n                break;\n            case \"production\":\n                setBaseURL(process.env.REACT_APP_BASE_URL_PROD as string);\n                break;\n            default:\n                setBaseURL(process.env.REACT_APP_BASE_URL_DEV as string);\n                break;\n        }\n    }, []);\n    return (\n        <MainWrapper title=\"Tutorial\">\n            <Grid container>\n                <Grid item xs={12}>\n                    <HeaderWrapper>\n                        <HeaderTypography>\n                            {multiLang?.tutorial.title}\n                        </HeaderTypography>\n                        <SubtitleTypography>\n                            {multiLang?.tutorial.subtitle}\n                        </SubtitleTypography>\n                    </HeaderWrapper>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperComponentWrapper>\n                        <Container>\n                            {\n                                multiLang?.tutorial.content.map((display: HeaderType | BodyType) => {\n                                    if (display.type === \"header\") {\n                                        return (\n                                            <SubHeaderTypography key={JSON.stringify(display)}>\n                                                {display.data}\n                                            </SubHeaderTypography>\n                                        )\n                                    } else if (display.type === \"body\") {\n                                        return (\n                                            <Fragment key={JSON.stringify(display)}>\n                                                {\n                                                    display.children.map((paragraph: TutorialType[]) => {\n                                                        return (\n                                                            <BodyTypography>\n                                                                {\n                                                                    paragraph.map((statement: TutorialType) => {\n                                                                        if (statement.type === \"text\") {\n                                                                            return statement.data;\n                                                                        } else if (statement.type === \"code\") {\n                                                                            return (\n                                                                                <code>{statement.data}</code>\n                                                                            )\n                                                                        } else if (statement.type === \"link\") {\n                                                                            return (\n                                                                                <a href={statement.to?.replace(\n                                                                                    \"REACT_APP_BASE_URL\",\n                                                                                    baseURL\n                                                                                )}>{statement.data}</a>\n                                                                            )\n                                                                        }\n                                                                    })\n                                                                }\n                                                            </BodyTypography>\n                                                        );\n                                                    })\n                                                }\n                                            </Fragment>\n                                        );\n                                    }\n                                })\n                            }\n                        </Container>\n                    </PaperComponentWrapper>\n                </Grid>\n            </Grid>\n        </MainWrapper>\n    );\n}\n\nexport default Tutorial;\n"],"names":["multiLang","useContext","LanguageContext","useState","baseURL","setBaseURL","useEffect","process","title","container","item","xs","tutorial","subtitle","content","map","display","type","data","JSON","stringify","Fragment","children","paragraph","statement","href","to","replace"],"sourceRoot":""}